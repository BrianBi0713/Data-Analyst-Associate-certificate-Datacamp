FoodYum Sales Analysis
This project contains SQL queries to analyze FoodYum's grocery store data for effective decision-making.

Here is the regular version of the SQL analysis for FoodYum:

Task 1: Missing year_added Count

The query below identifies how many products have a missing year_added value.

SELECT COUNT(*) AS missing_year
FROM products
WHERE year_added IS NULL;

Result:

missing_year
170

Task 2: Data Cleaning Query

The query below ensures that all product data matches the required criteria, including replacing missing values and ensuring correct formatting.

SELECT
    product_id,
    COALESCE(product_type, 'Unknown') AS product_type,
    COALESCE(NULLIF(REPLACE(brand, '-', ''), ''), 'Unknown') AS brand,
    COALESCE(ROUND(CAST(REGEXP_REPLACE(weight, '[^\d.]', '', 'g') AS DECIMAL(10, 2)), 2), ROUND((SELECT PERCENTILE_DISC(0.5) WITHIN GROUP (ORDER BY CAST(REGEXP_REPLACE(weight, '[^\d.]', '', 'g') AS DECIMAL(10, 2))) FROM products), 2)) AS weight,
    COALESCE(
        TO_CHAR(CAST(price AS DECIMAL(10, 2)), '9999999999.99'),
        TO_CHAR(CAST((SELECT PERCENTILE_DISC(0.5) WITHIN GROUP (ORDER BY price) FROM products) AS DECIMAL(10, 2)), '9999999999.99')
    ) AS price,
    COALESCE(average_units_sold, 0) AS average_units_sold,
    COALESCE(year_added, 2022) AS year_added,
    COALESCE(UPPER(stock_location), 'Unknown') AS stock_location
FROM products;

Task 3: Price Range by Product Type

To determine the minimum and maximum price for each product type, use the following query:

SELECT product_type,
       MIN(price) AS min_price,
       MAX(price) AS max_price
FROM products 
GROUP BY product_type;

Result:

product_type	min_price	max_price
Snacks	        5.20	    10.72
Produce	        3.46	     8.78
Dairy	        8.33	    13.97
Bakery	        6.26	    11.88
Meat	        11.48	    16.98

Task 4: High-Selling Meat and Dairy Products

To find the meat and dairy products with average units sold greater than 10, use the following query:

SELECT product_id, price, average_units_sold
FROM products 
WHERE product_type IN ('Meat', 'Dairy')
      AND average_units_sold > 10;

Result:

product_id	price	average_units_sold
6	16.20	24
8	15.77	28
…	…	…
